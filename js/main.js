const searchEl = document.querySelector('.search');
const searchInputEl = searchEl.querySelector('input');

searchEl.addEventListener('click', function () {
    searchInputEl.focus();
});

searchInputEl.addEventListener('focus', function () {
    searchEl.classList.add('focused');
    searchInputEl.setAttribute('placeholder', '통합검색');
});

searchInputEl.addEventListener('blur', function () {
    searchEl.classList.remove('focused');
    searchInputEl.setAttribute('placeholder', '');
});

const badgeEl = document.querySelector('header .badges');
const toTopEl = document.querySelector('#to-top');

window.addEventListener('scroll', _.throttle(function() {
    console.log(window.scrollY);
    if (window.scrollY > 500) {
        // Badge 요소 숨기기
        // gsap.to(���, ���ӽð�, �ɼ�);
        gsap.to(badgeEl, .6, {
            opacity: 0,
            display: 'none'
        });
        // 상단으로 스크롤 버튼 보이기
        gsap.to(toTopEl, .2, {
            x: 0
        });
    } else {
        // Badge 요소 보이기
        gsap.to(badgeEl, .6, {
            opacity: 1,
            display: 'block'
        });
        // 상단으로 스크롤 버튼 숨기기
        gsap.to(toTopEl, .2, {
            x: 100
        });
    }
}, 300));
// _.throttle(�Լ�, �ð�)

toTopEl.addEventListener('click', function () {
    gsap.to(window, .7, {
        scrollTo: 0
    });
});

const fadeEls = document.querySelectorAll('.visual .fade-in');
fadeEls.forEach(function (fadeEl, index) {
    gsap.to(fadeEl, 1, {
        delay: (index + 1) * .7,
        opacity: 1
    });
});


// new Swiper(?????????, ??????)
new Swiper('.notice-line .swiper', {
    direction: 'vertical',
    autoplay: true,
    loop: true
});

new Swiper('.promotion .swiper', {
    slidesPerView: 3, // ???���� ����??? ???????????? ����
    spaceBetween: 10, // ???????????? ?????? ??????
    centeredSlides: true,  // 1??? ??????????????? ????????? ����???
    loop: true,
    // autoplay: {
    //     delay: 5000
    // }
    pagination: {
        el: '.promotion .swiper-pagination', // ????????? ��ȣ ?????? ?????????
        clickable: true // ???????????? ????????? ��ȣ ?????? ?????? ?????? ??????
    },
    navigation: {
        prevEl: '.promotion .swiper-prev',
        nextEl: '.promotion .swiper-next'
    }
});
new Swiper('.awards .swiper', {
    autoplay: true,
    loop: true,
    spaceBetween: 30,
    slidesPerView: 5,
    navigation: {
        prevEl: '.awards .swiper-prev',
        nextEl: '.awards .swiper-next'
    }
});



const promotionEl = document.querySelector('.promotion');
const promotionToggleBtn = document.querySelector('.toggle-promotion');
let isHidePromotion = false;
promotionToggleBtn.addEventListener('click', function () {
    isHidePromotion = !isHidePromotion
    if (isHidePromotion) {
        // 요소 숨기기!
        promotionEl.classList.add('hide');
    } else {
        // 요소 보이기!
        promotionEl.classList.remove('hide');

    }
});

// ???? ???? ???(????? 2???????)
function random(min, max) {
    // `.toFixed()`?? ???? ????? ???? ???????,
    // `parseFloat()`?? ???? ??????? ?????? ???? ??????? ???
    return parseFloat((Math.random() * (max - min) + min).toFixed(2))
}
function floatingObject (selector, delay, size) { 
    // gsap.to(???, ?��?, ???);
    gsap.to(
        selector, // ??????
        random(1.5, 2.5), // ??????? ???? ?��?
        { // ???
        y: size, // y?????? ???? ???????
        repeat: -1, // ???? ???
        yoyo: true, // ??? ????? ????????? ??? ???
        ease: Power1.easeInOut, // ??��???, ?��??? ??????? ????
        delay: random(0, delay) // ???? ?��? ???? (?????��?)
    });
}
floatingObject('.floating1', 1, 15);
floatingObject('.floating2', .5, 15);
floatingObject('.floating3', 1.5, 20);


const spyEls = document.querySelectorAll('section.scroll-spy');
spyEls.forEach(function (spyEl) {
    new ScrollMagic
        .Scene({
            triggerElement: spyEl, // ?????? ???��? ?????? ???? ????
            triggerHook: .8 // 0.8 ?���? ???? ?????? ??????? ???? ??????? ??? ?????? ????? ??? ?????? ?????(????)
    })
        .setClassToggle(spyEl, 'show')
        .addTo(new ScrollMagic.Controller());
});

const thisYear = document.querySelector('.this-year');
thisYear.textContent = new Date().getFullYear();